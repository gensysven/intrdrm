name: Emergency Generation

on:
  workflow_dispatch:
    inputs:
      count:
        description: 'Number of connections to generate'
        required: true
        default: '50'
      delay:
        description: 'Delay between generations (seconds)'
        required: false
        default: '5'
      reason:
        description: 'Reason for emergency generation'
        required: false
        default: 'Pool replenishment'

jobs:
  emergency-generate:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Codex authentication
        run: |
          mkdir -p ~/.codex
          echo '${{ secrets.CODEX_AUTH_JSON }}' > ~/.codex/auth.json
          chmod 600 ~/.codex/auth.json
        env:
          CODEX_AUTH_JSON: ${{ secrets.CODEX_AUTH_JSON }}

      - name: Create environment file
        run: |
          cat > .env.local << EOF
          NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_KEY=${{ secrets.SUPABASE_SERVICE_KEY }}
          SLACK_WEBHOOK_URL=${{ secrets.SLACK_WEBHOOK_URL }}
          EOF

      - name: Log emergency generation
        run: |
          echo "ðŸš¨ Emergency Generation Triggered"
          echo "Reason: ${{ github.event.inputs.reason }}"
          echo "Count: ${{ github.event.inputs.count }}"
          echo "Delay: ${{ github.event.inputs.delay }}s"
          echo "Triggered by: ${{ github.actor }}"

      - name: Run pre-generation health check
        run: npm run health-check || echo "Pre-generation health check completed"

      - name: Generate connections (emergency mode)
        run: ./scripts/generate-batch.sh ${{ github.event.inputs.count }} ${{ github.event.inputs.delay }}
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: Run post-generation health check
        if: always()
        run: npm run health-check

      - name: Upload generation logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emergency-logs-${{ github.run_number }}
          path: logs/*.log
          retention-days: 90

      - name: Summary
        if: always()
        run: |
          echo "## Emergency Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Reason**: ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Count**: ${{ github.event.inputs.count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Delay**: ${{ github.event.inputs.delay }}s" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
